//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataToolBox.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DataToolBox.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to csvScrubber &lt;- function(pathChanged, fileName) {
        ///  wd &lt;- dirname(pathChanged)
        ///  setwd(wd)
        ///  clean &lt;- &quot;Clean_&quot;
        ///  newFileName &lt;- paste(clean,fileName,sep=&quot;&quot;)
        ///  deleteNoData &lt;- read.csv(fileName, header = TRUE)
        ///  # Delete all columns with no data
        ///  cleanFile &lt;- deleteNoData[!sapply(deleteNoData, function (x) all(is.na(x) | x == &quot;&quot;))]
        ///  write.csv(cleanFile, file = file.path(wd, newFileName), na=&quot;&quot;, row.names = F)
        ///}.
        /// </summary>
        public static string CSVScrubber {
            get {
                return ResourceManager.GetString("CSVScrubber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FileSmasher &lt;- function(allFiles){
        ///
        ///require(&apos;plyr&apos;)
        ///
        ///smashedFiles&lt;- lapply(allFiles, read.csv, header = TRUE)
        ///
        ///filePath &lt;- gsub(&quot;^(.*/).*&quot;,&quot;\\1&quot;,allFiles[1])
        ///
        ///
        ///smashedFiles2 &lt;- rbind.fill(smashedFiles)
        ///write.csv(smashedFiles2, file = file.path(filePath, &quot;AllFilesTogether.csv&quot;), na=&quot;&quot;, row.names = F)
        ///}.
        /// </summary>
        public static string FileSmasher {
            get {
                return ResourceManager.GetString("FileSmasher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Help {
            get {
                object obj = ResourceManager.GetObject("Help", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to createDirec &lt;- function(folderChanged){
        ///  setwd(folderChanged)
        ///  dir.create(file.path(folderChanged,&apos;/Import&apos;))
        ///}
        ///  
        ///  
        ///  ###################################################
        ///  # Function to rearrange 
        ///  # Example: columns lead &lt;- arrange.vars(lead, c(&quot;OwnerName&quot;=2))
        ///  arrange.vars &lt;- function(data, vars){
        ///    ##stop if not a data.frame (but should work for matrices as well)
        ///    stopifnot(is.data.frame(data))
        ///    
        ///    ##sort out inputs
        ///    data.nms &lt;- names(data)
        ///    var.nr &lt;- length(data.nms) [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SalesforceFormatter {
            get {
                return ResourceManager.GetString("SalesforceFormatter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # SFMaster
        ///
        ///### Naming Convention for functions ###
        ///#f = function
        ///#C = Contacts
        ///#A = Accounts
        ///#c = checked
        ///#n = not
        ///#y = Yes
        ///#U = User
        ///
        ///createDirec &lt;- function(folderChanged){
        ///  setwd(folderChanged)
        ///  dir.create(file.path(folderChanged,&apos;/Import&apos;))
        ///}
        ///
        ///###################################################
        ///# Function to rearrange 
        ///# Example: columns lead &lt;- arrange.vars(lead, c(&quot;OwnerName&quot;=2))
        ///arrange.vars &lt;- function(data, vars){
        ///  ##stop if not a data.frame (but should work for matrices as  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SalesforceMaster {
            get {
                return ResourceManager.GetString("SalesforceMaster", resourceCulture);
            }
        }
    }
}
